INTERLIS 2.3;

!! Version    | Who  | Modification
!!------------------------------------------------------------------------------
!! 2018-07-09 | BAFU | Korrekturen im Modell NoisePollutionRegisterForRailwayInfrastructure_LV95_V1_1:
!!                     Attribut vehicule_length : MANDATORY 0.00 .. 99.00 auf 99.99 geändert (Linie 780).
!!                     Attribut data_owner : MANDATORY TEXT*10 auf TEXT*30 geändert (Linien 890, 950).
!!                     Attribut lrE_max_year : 1900 .. 2100 [Units.dB] auf lrE_max_year : 1900 .. 2100 geändert (Linie 964).

/** Codelisten für den Lärmbelastungskataster Eisenbahnanlagen.
 */
!!@ technicalContact=mailto:gis@bafu.admin.ch
!!@ furtherInformation=https://www.bafu.admin.ch/geodatenmodelle
!!@ IDGeoIV=126.1
MODEL NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1 (en)
AT "https://models.geo.admin.ch/BAFU/"
VERSION "2018-07-09"  =
  IMPORTS CatalogueObjects_V1,LocalisationCH_V1;

  TOPIC codelists
  EXTENDS CatalogueObjects_V1.Catalogues =

    CLASS brake_series_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END brake_series_Catalogue;

    CLASS noisebarrier_material_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END noisebarrier_material_Catalogue;

    CLASS track_bridge_sonrail_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END track_bridge_sonrail_Catalogue;

    CLASS track_superstr_sonrail_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END track_superstr_sonrail_Catalogue;

    CLASS train_purpose_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END train_purpose_Catalogue;

    CLASS brake_type_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      /** Modell, für welches diese Kategorie verwendet wird. Zum Beispiel SEMIBEL oder SEMIBEL_fitted_with_sonRAIL
       */
      model : MANDATORY TEXT*1000;
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
      /** SEMIBEL A Parameter
       */
      a_param : MANDATORY -99.9 .. 99.9;
      /** SEMIBEL B Parameter
       */
      b_param : MANDATORY -99.9 .. 99.9;
    END brake_type_Catalogue;

    STRUCTURE noisebarrier_material_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) noisebarrier_material_Catalogue;
    END noisebarrier_material_CatRef;

    STRUCTURE track_bridge_sonrail_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) track_bridge_sonrail_Catalogue;
    END track_bridge_sonrail_CatRef;

    STRUCTURE track_superstr_sonrail_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) track_superstr_sonrail_Catalogue;
    END track_superstr_sonrail_CatRef;

    STRUCTURE train_purpose_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) train_purpose_Catalogue;
    END train_purpose_CatRef;

    CLASS traintype_semibel_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END traintype_semibel_Catalogue;

    CLASS exposure_limit_value_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END exposure_limit_value_Catalogue;

    STRUCTURE traintype_semibel_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) traintype_semibel_Catalogue;
    END traintype_semibel_CatRef;

    CLASS tunnel_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END tunnel_Catalogue;

    CLASS noisebarriertype_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END noisebarriertype_Catalogue;

    STRUCTURE tunnel_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) tunnel_Catalogue;
    END tunnel_CatRef;

    CLASS type_series_sonrail_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END type_series_sonrail_Catalogue;

    STRUCTURE brake_series_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) brake_series_Catalogue;
    END brake_series_CatRef;

    CLASS noisebarriertype_sonrail_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END noisebarriertype_sonrail_Catalogue;

    STRUCTURE type_series_sonrail_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) type_series_sonrail_Catalogue;
    END type_series_sonrail_CatRef;

    STRUCTURE brake_type_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) brake_type_Catalogue;
    END brake_type_CatRef;

    STRUCTURE exposure_limit_value_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) exposure_limit_value_Catalogue;
    END exposure_limit_value_CatRef;

    CLASS railsurface_corr_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END railsurface_corr_Catalogue;

    STRUCTURE noisebarriertype_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) noisebarriertype_Catalogue;
    END noisebarriertype_CatRef;

    STRUCTURE noisebarriertype_sonrail_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) noisebarriertype_sonrail_Catalogue;
    END noisebarriertype_sonrail_CatRef;

    CLASS operation_status_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END operation_status_Catalogue;

    STRUCTURE operation_status_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) operation_status_Catalogue;
    END operation_status_CatRef;

    STRUCTURE railsurface_corr_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) railsurface_corr_Catalogue;
    END railsurface_corr_CatRef;

    CLASS emodel_rail_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END emodel_rail_Catalogue;

    STRUCTURE emodel_rail_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) emodel_rail_Catalogue;
    END emodel_rail_CatRef;

    CLASS pointofdetermination_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*1000;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END pointofdetermination_Catalogue;

    STRUCTURE pointofdetermination_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) pointofdetermination_Catalogue;
    END pointofdetermination_CatRef;

    CLASS es_Catalogue
    EXTENDS CatalogueObjects_V1.Catalogues.Item =
      Code : MANDATORY TEXT*3;
      Definition : MANDATORY LocalisationCH_V1.MultilingualText;
    END es_Catalogue;

    STRUCTURE es_CatRef
    EXTENDS CatalogueObjects_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) es_Catalogue;
    END es_CatRef;

  END codelists;

END NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.

/** Minimales Geodatenmodell Lärmbelastungskataster Eisenbahnanlagen
 */
!!@ furtherInformation=https://www.bafu.admin.ch/geodatenmodelle
!!@ IDGeoIV=126.1
!!@ technicalContact=mailto:gis@bafu.admin.ch
MODEL NoisePollutionRegisterForRailwayInfrastructure_LV03_V1_1 (en)
AT "https://models.geo.admin.ch/BAFU/"
VERSION "2018-07-09"  =
  IMPORTS GeometryCHLV03_V1,Units,NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1;

  DOMAIN

    /** Die Definition der 3D-Geometrie muss übereinstimmen mit jener aus dem Datensatz 98.1 (Schienennetz)
     */
    PolylineZ = POLYLINE WITH (STRAIGHTS) VERTEX GeometryCHLV03_V1.Coord3;
    Polygon = SURFACE WITH (STRAIGHTS) VERTEX GeometryCHLV03_V1.Coord2 WITHOUT OVERLAPS > 0.001;

  TOPIC emission_railway =
    DEPENDS ON NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists;

    /** SonRAIL Daten enthalten Emissionsdaten in fünf verschiedenen Höhen, jeweils auf 20 Terzbänder verteilt.
     */
    CLASS input_noise_sonrail =
      /** Gibt an, ob dieser Datensatz für die Tag- oder Nachtzeit gilt. True bedeutet Tag, also zwischen 06:00 Uhr und 22:00 Uhr.
       */
      is_day : MANDATORY BOOLEAN;
      /** Höhe über Boden
       */
      height : MANDATORY 0.0 .. 4.0 [INTERLIS.m];
      /** Wert für die erste Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_100 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die zweite Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_125 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die dritte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_160 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die vierte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_200 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die fünfte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_250 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die sechste Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_315 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die siebte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_400 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die achte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_500 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die neunte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_630 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die zehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_800 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die elfte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_1000 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die zwölfte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_1250 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die dreizehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_1600 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die vierzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_2000 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die fünfzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_2500 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die sechzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_3150 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die siebzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_4000 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die achtzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_5000 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die neunzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_6300 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die zwanzigste Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_8000 : MANDATORY -100.0 .. 120.0 [Units.dB];
    END input_noise_sonrail;

    CLASS inputdata_Etrain =
      inputdata_remark : MTEXT*256;
      vehicule_number_day : MANDATORY 0.0 .. 999999.9;
      vehicule_number_night : MANDATORY 0.0 .. 999999.9;
      vehicule_length : MANDATORY 0.00 .. 99.99 [INTERLIS.m];
      brake_series : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.brake_series_CatRef;
      /** Geschwindigkeit in Abhängigkeit der Bremsreihe
       */
      trainspeed : 0 .. 300 [Units.kmh];
      /** Effektive Geschwindigkeit
       * Empfehlung,falls keine weiteren Angaben:
       * Für Personenzüge: 90% der Maximalgeschwindigkeit
       * Für Güterzüge: 80% der Maximalgeschwindigkeit
       */
      trainspeed_eff : MANDATORY 0 .. 300 [Units.kmh];
      /** Referenzjahr der Emisionsberechnung Eisenbahn
       */
      refyear_modcal_rail : MANDATORY 1900 .. 2100;
    END inputdata_Etrain;

    CLASS inputdata_Etrassee =
      /** Allgemeine Bemerkungen zur Klasse
       */
      inputdata_remark : MTEXT*256;
      /** Anzahl Gleise
       */
      track_number : 0 .. 99;
      /** Kurvenradius
       */
      track_curve : 0.00 .. 999.99 [INTERLIS.m];
      tunnel : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.tunnel_CatRef;
    END inputdata_Etrassee;

    /** Betriebspunkt
     */
    STRUCTURE operating_point =
      didok_nr : MANDATORY 0 .. 9999999;
      name : TEXT*50;
      /** Betriebspunkt Abkürzung
       */
      abbreviation : TEXT*6;
    END operating_point;

    /** Schalleistungspegel auf 1.0 m Höhe in 1.2 m Distanz.
     */
    CLASS output_Erailway =
      /** Emission eines Fahrzeugtyps (Tag) [dB(A)]
       */
      leq_part_day : MANDATORY 0.0 .. 120.0 [Units.dB];
      /** Emission eines Fahrzeugtyps (Nacht) [dB(A)]
       */
      leq_part_night : MANDATORY 0.0 .. 120.0 [Units.dB];
    END output_Erailway;

    CLASS input_train_semibel
    EXTENDS inputdata_Etrain =
      /** Zugskategorie
       */
      traintype_semibel : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.traintype_semibel_CatRef;
      /** Bremsbauart
       */
      brake_type : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.brake_type_CatRef;
      /** Zugzweck
       */
      train_purpose : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.train_purpose_CatRef;
    END input_train_semibel;

    CLASS input_train_sonrail
    EXTENDS inputdata_Etrain =
      /** Fahrzeugtyp
       */
      type_series_sonrail : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.type_series_sonrail_CatRef;
      /** Flachsstellenteil in %
       */
      flat_spot_degree : MANDATORY 0.0 .. 100.0 [Units.Percent];
    END input_train_sonrail;

    CLASS input_trassee_semibel
    EXTENDS inputdata_Etrassee =
      /** Schienenrauheit
       */
      railsurface_correction : MANDATORY 0.0 .. 9.9 [Units.dB];
      /** Schienenprofil
       */
      track_profile : MANDATORY TEXT*256;
      /** Weiche
       */
      track_switch : MANDATORY BOOLEAN;
      track_superstructure : MANDATORY -10.0 .. 10.0 [Units.dB];
      track_bridge : 0.0 .. 20.0 [Units.dB];
    END input_trassee_semibel;

    CLASS input_trassee_sonrail
    EXTENDS inputdata_Etrassee =
      railsurface_correction : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.railsurface_corr_CatRef;
      track_superstructure : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.track_superstr_sonrail_CatRef;
      track_bridge : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.track_bridge_sonrail_CatRef;
    END input_trassee_sonrail;

    CLASS railwayemission =
      /** 3D-Linie. Die Geometrie wird übernommen vom Geobasisdatensatz 98.1 Schienennetz (Klasse Netzsegment).
       * Ein Emissionssegment darf nicht über die Grenzen eines Netzsegments hinausgehen. Es muss immer einem ganzen Netzsegment oder einem Teil eines Netzsegments entsprechen.
       */
      geometry_E : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_LV03_V1_1.PolylineZ;
      /** Objekt-Identifikator der entsprechenden Kilometierungslinie im Geobasisdatensatz Schienennetz (98.1)
       */
      kml_oid : MANDATORY TEXT*16;
      /** Eindeutige Nummer der Kilometrierungslinie innerhalb des Namensraumes des Datenherrn (Attribut "data_owner")
       */
      kml_number : MANDATORY 0 .. 9999;
      /** Datenherr
       */
      data_owner : MANDATORY TEXT*30;
      /** Kilometrierung: Anfang
       */
      km_from : MANDATORY -999.999 .. 999.999 [Units.km];
      /** Kilometrierung: Ende
       */
      km_to : MANDATORY -999.999 .. 999.999 [Units.km];
      /** Anfangsbetriebspunkt des Emissionsabschnitts
       */
      op_from : NoisePollutionRegisterForRailwayInfrastructure_LV03_V1_1.emission_railway.operating_point;
      /** Endbetriebspunkt des Emissionsabschnitts
       */
      op_to : NoisePollutionRegisterForRailwayInfrastructure_LV03_V1_1.emission_railway.operating_point;
      /** inkl. Pegelkorrekturen K und Modellkorrektur. Entspricht dem Teilbeurteilungspegel LR1 (Fahrbetrieb)
       */
      lrE_day : MANDATORY 0.0 .. 120.0 [Units.dB];
      /** inkl. Pegelkorrekturen K und Modellkorrektur. Entspricht dem Teilbeurteilungspegel LR1 (Fahrbetrieb)
       */
      lrE_night : MANDATORY 0.0 .. 120.0 [Units.dB];
      /** Verwendetes Emissionsmodell Bahn: sonRAIL oder Semibel
       */
      emodel_railway : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.emodel_rail_CatRef;
      /** Bemerkungen zu den verwendeten Beurteilungspegeln. Wie wurden die Attribute LrEday und LrEnight festgelegt.
       */
      lrE_remark : MTEXT*256;
      /** Kumulierte Anzahl Personen- und Güterzüge
       */
      train_number_day : 0.0 .. 999999.9;
      /** Kumulierte Anzahl Personen- und Güterzüge
       */
      train_number_night : 0.0 .. 999999.9;
      /** Pegelkorrektur gemäss Anhang 4, Art. 33 (LSV) bezogen auf Attribut A15
       */
      level_correction_day : MANDATORY -15.0 .. -5.0 [Units.dB];
      /** Pegelkorrektur gemäss Anhang 4, Art. 33 (LSV) bezogen auf Attribut A16
       */
      level_correction_night : MANDATORY -15.0 .. -5.0 [Units.dB];
      /** Aggregation aller Güterzüge (06:00-22:00 Uhr)
       */
      train_number_freight_d : 0.0 .. 999999.9;
      /** Aggregation aller Güterzüge (22:00-06:00 Uhr)
       */
      train_number_freight_n : 0.0 .. 999999.9;
      /** Jahr der Erhebung
       */
      year_evaluation : 1900 .. 2100;
    END railwayemission;

    /** Gemäss Emissionsplan zulässige Emissionspegel
     */
    CLASS railwayemission_legal =
      /** 3D-Linie. Die Geometrie wird übernommen vom Geobasisdatensatz 98.1 Schienennetz
       */
      geometry_E_legal : MANDATORY PolylineZ;
      /** Objekt-ID der entsprechenden Kilometrierungslinie aus dem Datensatz 98.1
       */
      kml_oid : MANDATORY TEXT*16;
      /** Eindeutige Nummer der Kilometrierungslinie innerhalb des Namensraumes des Datenherrn (Attribut A4). Dies entspricht der Kilometrierungslinie im Datensatz 98.1
       */
      kml_number : MANDATORY 0 .. 9999;
      data_owner : MANDATORY TEXT*30;
      /** Kilometrierung: Anfang
       */
      km_from : MANDATORY -999.999 .. 999.999 [Units.km];
      /** Kilometrierung: Ende
       */
      km_to : MANDATORY -999.999 .. 999.999 [Units.km];
      /** Für die Lärmsanierung massgebender Emissionspegel
       */
      lrE_max_day : MANDATORY 0.0 .. 120.0 [Units.dB];
      /** Für die Lärmsanierung massgebender Emissionspegel
       */
      lrE_max_night : MANDATORY 0.0 .. 120.0 [Units.dB];
      lrE_remark : MTEXT*256;
      lrE_max_year : 1900 .. 2100;
      /** Datum der Verfügung. Für Angaben, wo das Datum nicht genau bekannt ist, einfach 1.1. und Jahr verwenden.
       */
      lrE_max_date : FORMAT INTERLIS.XMLDate "1900-01-01" .. "2100-01-01";
      lrE_max_remark : MTEXT*256;
    END railwayemission_legal;

    ASSOCIATION railwayemission2input_noise_sonrail =
      segment -- {1} railwayemission;
      input_noise_sonrail -- {0..10} input_noise_sonrail;
    END railwayemission2input_noise_sonrail;

    ASSOCIATION output_Erailway2input_train_sonrail =
      output_sonrail -<> {1} output_Erailway;
      input_sonrail -- {0..1} input_train_sonrail;
    END output_Erailway2input_train_sonrail;

    ASSOCIATION output_Erailway2input_trassee_sonrail =
      output_sonrail -<> {1} output_Erailway;
      input_trassee_sonrail -- {0..1} input_trassee_sonrail;
    END output_Erailway2input_trassee_sonrail;

    ASSOCIATION output_Erailway_semibel2input_train_semibel =
      output -<> {1} output_Erailway;
      input_train_semibel -- {0..1} input_train_semibel;
    END output_Erailway_semibel2input_train_semibel;

    ASSOCIATION output_Erailway_semibel2input_trassee_semibel =
      output -<> {1} output_Erailway;
      input_trassee_semibel -- {0..1} input_trassee_semibel;
    END output_Erailway_semibel2input_trassee_semibel;

    ASSOCIATION railwayemission2output_Erailway =
      segment -<> {1} railwayemission;
      calc_result -- {0..*} output_Erailway;
    END railwayemission2output_Erailway;

    ASSOCIATION railwayemission2railwayemission_legal =
      railwayemission -- {0..*} railwayemission;
      railwayemission_legal -- {0..*} railwayemission_legal;
    END railwayemission2railwayemission_legal;

  END emission_railway;

  TOPIC immission_railway =
    DEPENDS ON NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists;

    CLASS dispersion_calculation =
      dispcal_remark : MTEXT*256;
      dispersionmodel : MANDATORY TEXT*30;
      dispersionapplication : MANDATORY TEXT*30;
      heightmodel : TEXT*40;
      building_database : TEXT*40;
      noisebarrier_geodata : TEXT*40;
      emissiondata : TEXT*40;
      refyear_register : MANDATORY 1900 .. 2100;
      NPR_name : MANDATORY TEXT*50;
      I_measurement : BOOLEAN;
    END dispersion_calculation;

    /** Verfügte maximal zulässige Immissionspegel
     */
    CLASS pointofdetermination_legal =
      /** Allgemeine Bemerkungen zur Klasse. Zum Beispiel, auf welches Gebäude-Geschoss sich der Ermittlungspunkt bezieht.
       */
      determination_l_remark : MTEXT*256;
      geometry_pod : MANDATORY GeometryCHLV03_V1.Coord3;
      /** Beurteilung des Ermittlungspunkts, ob es sich dabei beim Objekt um einen Betriebsraum handelt oder nicht.
       */
      operation_status : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.operation_status_CatRef;
      /** Adressen ID aus eidgenössischem Gebäude- und Wohnungsregister GWR.
       */
      EGID : 0 .. 9999999999;
      /** Adressen ID aus eidgenössischem Gebäude- und Wohnungsregister GWR.
       */
      EDID : 0 .. 9999999999;
      /** Wertebereich: Fassadenpunkt (am Gebäude), Freifeld oder an der Baulinie.
       */
      pointofdetermination_t : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.pointofdetermination_CatRef;
      /** Nur wenn kein EGID oder EDID vorhanden ist und sich der Ermittlungspunkt an einem Gebäude befindet.
       */
      address_pod : MTEXT*100;
      /** In welchem Jahr  wurden die maximal zulässigen Immissionspegel verfügt?
       */
      lr_max_year : 1900 .. 2100;
      /** Max. zulässiger Immissionspegel (Tag)
       */
      lr_max_day : 0.0 .. 120.0 [Units.dB];
      /** Max. zulässiger Immissionspegel (Nacht)
       */
      lr_max_night : 0.0 .. 120.0 [Units.dB];
      receptor : TEXT*50;
      es : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.es_CatRef;
      floor : TEXT*10;
      MANDATORY CONSTRAINT
        DEFINED (lr_max_day) OR DEFINED (lr_max_night);
    END pointofdetermination_legal;

    CLASS noisebarrier =
      geometry_nb : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_LV03_V1_1.PolylineZ;
      /** Abstand vom Gleis
       */
      trackdistance_nb : 0.00 .. 99.99 [INTERLIS.m];
      /** Länge der Lärmschutzwand
       */
      length_nb : 0.00 .. 1000.00 [INTERLIS.m];
      noisebarrierheight : 0.00 .. 99.99;
      /** Wandhöhe ab Schienenoberkante
       */
      height_above_track : 0.00 .. 99.99 [INTERLIS.m];
      noisebarriertype : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.noisebarriertype_CatRef;
      reflexionloss_left : 0.0 .. 99.9;
      reflexionloss_right : 0.0 .. 99.9;
      surface_type : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.noisebarriertype_sonrail_CatRef;
      noisebarrier_remark : MTEXT*256;
      /** Jahr der Verfügung
       */
      year_legal : 1900 .. 2100;
      /** Baujahr
       */
      year_construction : 1900 .. 2100;
      material : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.noisebarrier_material_CatRef;
      /** True, falls Teile der Wand aus Glas sind.
       */
      has_glass : BOOLEAN;
      /** True, falls beidseitig absorbierend.
       */
      absorbtion_two_sided : BOOLEAN;
    END noisebarrier;

    CLASS affected_analysis =
      BFSNr : MANDATORY 0 .. 9999;
      GemN : MANDATORY TEXT*50;
      affected_analysis_remark : MTEXT*256;
      PV_day : MANDATORY 0.0 .. 99999999.9;
      PV_night : MANDATORY 0.0 .. 99999999.9;
      ALV_day : MANDATORY 0.0 .. 99999999.9;
      ALV_night : MANDATORY 0.0 .. 99999999.9;
      AV_day : MANDATORY 0.0 .. 99999999.9;
      AV_night : MANDATORY 0.0 .. 99999999.9;
      sum_people : 0.0 .. 99999999.9;
      withoutsensitivitylevel : 0.0 .. 99999999.9;
      analysis_year : 1900 .. 2100;
      gemarea : MANDATORY Polygon;
    END affected_analysis;

    CLASS pointofdetermination =
      determination_remark : MTEXT*256;
      /** Punkt, inkl. Immissionskorrektur aus dem Berechnungsmodell. Entweder Tag (N2) oder Nacht (N3) sollte zwingend erfasst werden.
       */
      Lr_day : 0.0 .. 120.0;
      /** Punkt, inkl. Immissionskorrektur aus dem Berechnungsmodell. Entweder Tag (N2) oder Nacht (N3) sollte zwingend erfasst werden.
       */
      Lr_night : 0.0 .. 120.0;
      geometry_pod : MANDATORY GeometryCHLV03_V1.Coord3;
      operation_status : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.operation_status_CatRef;
      EGID : 0 .. 9999999999;
      EDID : 0 .. 9999999999;
      pointofdetermination_t : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.pointofdetermination_CatRef;
      address_pod : MTEXT*100;
      exposure_limit_value_d : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.exposure_limit_value_CatRef;
      exposure_limit_value_n : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.exposure_limit_value_CatRef;
      exposure_limit_date : FORMAT INTERLIS.XMLDate "1900-01-01" .. "2100-12-31";
      /** Störkorrekturwert gemäss LSV Anhang 4, Kap. s3
       */
      k2 : 0 .. 8 [Units.dB];
      receptor : TEXT*50;
      es : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.es_CatRef;
      floor : TEXT*10;
    END pointofdetermination;

    ASSOCIATION dispersion_calculation2pointofdetermination =
      dispersion_calculation -- {1} dispersion_calculation;
      pointofdetermination -- {1..*} pointofdetermination;
    END dispersion_calculation2pointofdetermination;

    ASSOCIATION pointofdetermination2pointofdetermination_legal =
      pointofdetermination -- {0..*} pointofdetermination;
      pointofdetermination_legal -- {0..1} pointofdetermination_legal;
    END pointofdetermination2pointofdetermination_legal;

  END immission_railway;

END NoisePollutionRegisterForRailwayInfrastructure_LV03_V1_1.

/** Minimales Geodatenmodell Lärmbelastungskataster Eisenbahnanlagen
 */
!!@ furtherInformation=https://www.bafu.admin.ch/geodatenmodelle
!!@ IDGeoIV=126.1
!!@ technicalContact=mailto:gis@bafu.admin.ch
MODEL NoisePollutionRegisterForRailwayInfrastructure_LV95_V1_1 (en)
AT "https://models.geo.admin.ch/BAFU/"
VERSION "2018-07-09"  =
  IMPORTS GeometryCHLV95_V1,Units,NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1;

  DOMAIN

    /** Die Definition der 3D-Geometrie muss übereinstimmen mit jener aus dem Datensatz 98.1 (Schienennetz)
     */
    PolylineZ = POLYLINE WITH (STRAIGHTS) VERTEX GeometryCHLV95_V1.Coord3;
    Polygon = SURFACE WITH (STRAIGHTS) VERTEX GeometryCHLV95_V1.Coord2 WITHOUT OVERLAPS > 0.001;

  TOPIC emission_railway =
    DEPENDS ON NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists;

    /** SonRAIL Daten enthalten Emissionsdaten in fünf verschiedenen Höhen, jeweils auf 20 Terzbänder verteilt.
     */
    CLASS input_noise_sonrail =
      /** Gibt an, ob dieser Datensatz für die Tag- oder Nachtzeit gilt. True bedeutet Tag, also zwischen 06:00 Uhr und 22:00 Uhr.
       */
      is_day : MANDATORY BOOLEAN;
      /** Höhe über Boden
       */
      height : MANDATORY 0.0 .. 4.0 [INTERLIS.m];
      /** Wert für die erste Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_100 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die zweite Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_125 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die dritte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_160 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die vierte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_200 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die fünfte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_250 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die sechste Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_315 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die siebte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_400 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die achte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_500 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die neunte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_630 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die zehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_800 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die elfte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_1000 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die zwölfte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_1250 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die dreizehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_1600 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die vierzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_2000 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die fünfzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_2500 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die sechzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_3150 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die siebzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_4000 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die achtzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_5000 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die neunzehnte Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_6300 : MANDATORY -100.0 .. 120.0 [Units.dB];
      /** Wert für die zwanzigste Terzfrequenz. Falls kein Wert berechnet wurde, ist 0 einzugeben.
       */
      t_8000 : MANDATORY -100.0 .. 120.0 [Units.dB];
    END input_noise_sonrail;

    CLASS inputdata_Etrain =
      inputdata_remark : MTEXT*256;
      vehicule_number_day : MANDATORY 0.0 .. 999999.9;
      vehicule_number_night : MANDATORY 0.0 .. 999999.9;
      vehicule_length : MANDATORY 0.00 .. 99.99 [INTERLIS.m];
      brake_series : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.brake_series_CatRef;
      /** Geschwindigkeit in Abhängigkeit der Bremsreihe
       */
      trainspeed : 0 .. 300 [Units.kmh];
      /** Effektive Geschwindigkeit
       * Empfehlung,falls keine weiteren Angaben:
       * Für Personenzüge: 90% der Maximalgeschwindigkeit
       * Für Güterzüge: 80% der Maximalgeschwindigkeit
       */
      trainspeed_eff : MANDATORY 0 .. 300 [Units.kmh];
      /** Referenzjahr der Emisionsberechnung Eisenbahn
       */
      refyear_modcal_rail : MANDATORY 1900 .. 2100;
    END inputdata_Etrain;

    CLASS inputdata_Etrassee =
      /** Allgemeine Bemerkungen zur Klasse
       */
      inputdata_remark : MTEXT*256;
      /** Anzahl Gleise
       */
      track_number : 0 .. 99;
      /** Kurvenradius
       */
      track_curve : 0.00 .. 999.99 [INTERLIS.m];
      tunnel : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.tunnel_CatRef;
    END inputdata_Etrassee;

    /** Betriebspunkt
     */
    STRUCTURE operating_point =
      didok_nr : MANDATORY 0 .. 9999999;
      name : TEXT*50;
      /** Betriebspunkt Abkürzung
       */
      abbreviation : TEXT*6;
    END operating_point;

    /** Schalleistungspegel auf 1.0 m Höhe in 1.2 m Distanz.
     */
    CLASS output_Erailway =
      /** Emission eines Fahrzeugtyps (Tag) [dB(A)]
       */
      leq_part_day : MANDATORY 0.0 .. 120.0 [Units.dB];
      /** Emission eines Fahrzeugtyps (Nacht) [dB(A)]
       */
      leq_part_night : MANDATORY 0.0 .. 120.0 [Units.dB];
    END output_Erailway;

    CLASS input_train_semibel
    EXTENDS inputdata_Etrain =
      /** Zugskategorie
       */
      traintype_semibel : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.traintype_semibel_CatRef;
      /** Bremsbauart
       */
      brake_type : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.brake_type_CatRef;
      /** Zugzweck
       */
      train_purpose : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.train_purpose_CatRef;
    END input_train_semibel;

    CLASS input_train_sonrail
    EXTENDS inputdata_Etrain =
      /** Fahrzeugtyp
       */
      type_series_sonrail : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.type_series_sonrail_CatRef;
      /** Flachsstellenteil in %
       */
      flat_spot_degree : MANDATORY 0.0 .. 100.0 [Units.Percent];
    END input_train_sonrail;

    CLASS input_trassee_semibel
    EXTENDS inputdata_Etrassee =
      /** Schienenrauheit
       */
      railsurface_correction : MANDATORY 0.0 .. 9.9 [Units.dB];
      /** Schienenprofil
       */
      track_profile : MANDATORY TEXT*256;
      /** Weiche
       */
      track_switch : MANDATORY BOOLEAN;
      /** Zuschlag für Oberbautyp
       */
      track_superstructure : MANDATORY -10.0 .. 10.0 [Units.dB];
      track_bridge : 0.0 .. 20.0 [Units.dB];
    END input_trassee_semibel;

    CLASS input_trassee_sonrail
    EXTENDS inputdata_Etrassee =
      railsurface_correction : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.railsurface_corr_CatRef;
      track_superstructure : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.track_superstr_sonrail_CatRef;
      track_bridge : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.track_bridge_sonrail_CatRef;
    END input_trassee_sonrail;

    CLASS railwayemission =
      /** 3D-Linie. Die Geometrie wird übernommen vom Geobasisdatensatz 98.1 Schienennetz (Klasse Netzsegment).
       * Ein Emissionssegment darf nicht über die Grenzen eines Netzsegments hinausgehen. Es muss immer einem ganzen Netzsegment oder einem Teil eines Netzsegments entsprechen.
       */
      geometry_E : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_LV95_V1_1.PolylineZ;
      /** Objekt-Identifikator der entsprechenden Kilometierungslinie im Geobasisdatensatz Schienennetz (98.1)
       */
      kml_oid : MANDATORY TEXT*16;
      /** Eindeutige Nummer der Kilometrierungslinie innerhalb des Namensraumes des Datenherrn (Attribut "data_owner")
       */
      kml_number : MANDATORY 0 .. 9999;
      /** Datenherr
       */
      data_owner : MANDATORY TEXT*30;
      /** Kilometrierung: Anfang
       */
      km_from : MANDATORY -999.999 .. 999.999 [Units.km];
      /** Kilometrierung: Ende
       */
      km_to : MANDATORY -999.999 .. 999.999 [Units.km];
      /** Anfangsbetriebspunkt des Emissionsabschnitts
       */
      op_from : NoisePollutionRegisterForRailwayInfrastructure_LV95_V1_1.emission_railway.operating_point;
      /** Endbetriebspunkt des Emissionsabschnitts
       */
      op_to : NoisePollutionRegisterForRailwayInfrastructure_LV95_V1_1.emission_railway.operating_point;
      /** inkl. Pegelkorrekturen K und Modellkorrektur. Entspricht dem Teilbeurteilungspegel LR1 (Fahrbetrieb)
       */
      lrE_day : MANDATORY 0.0 .. 120.0 [Units.dB];
      /** inkl. Pegelkorrekturen K und Modellkorrektur. Entspricht dem Teilbeurteilungspegel LR1 (Fahrbetrieb)
       */
      lrE_night : MANDATORY 0.0 .. 120.0 [Units.dB];
      /** Verwendetes Emissionsmodell Bahn: sonRAIL oder Semibel
       */
      emodel_railway : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.emodel_rail_CatRef;
      /** Bemerkungen zu den verwendeten Beurteilungspegeln. Wie wurden die Attribute LrEday und LrEnight festgelegt.
       */
      lrE_remark : MTEXT*256;
      /** Kumulierte Anzahl Personen- und Güterzüge
       */
      train_number_day : 0.0 .. 999999.9;
      /** Kumulierte Anzahl Personen- und Güterzüge
       */
      train_number_night : 0.0 .. 999999.9;
      /** Pegelkorrektur gemäss Anhang 4, Art. 33 (LSV) bezogen auf Attribut A15
       */
      level_correction_day : MANDATORY -15.0 .. -5.0 [Units.dB];
      /** Pegelkorrektur gemäss Anhang 4, Art. 33 (LSV) bezogen auf Attribut A16
       */
      level_correction_night : MANDATORY -15.0 .. -5.0 [Units.dB];
      /** Aggregation aller Güterzüge (06:00-22:00 Uhr)
       */
      train_number_freight_d : 0.0 .. 999999.9;
      /** Aggregation aller Güterzüge (22:00-06:00 Uhr)
       */
      train_number_freight_n : 0.0 .. 999999.9;
      /** Jahr der Erhebung
       */
      year_evaluation : 1900 .. 2100;
    END railwayemission;

    /** Gemäss Emissionsplan zulässige Emissionspegel
     */
    CLASS railwayemission_legal =
      /** 3D-Linie. Die Geometrie wird übernommen vom Geobasisdatensatz 98.1 Schienennetz
       */
      geometry_E_legal : MANDATORY PolylineZ;
      /** Objekt-ID der entsprechenden Kilometrierungslinie aus dem Datensatz 98.1
       */
      kml_oid : MANDATORY TEXT*16;
      /** Eindeutige Nummer der Kilometrierungslinie innerhalb des Namensraumes des Datenherrn (Attribut A4). Dies entspricht der Kilometrierungslinie im Datensatz 98.1
       */
      kml_number : MANDATORY 0 .. 9999;
      data_owner : MANDATORY TEXT*30;
      /** Kilometrierung: Anfang
       */
      km_from : MANDATORY -999.999 .. 999.999 [Units.km];
      /** Kilometrierung: Ende
       */
      km_to : MANDATORY -999.999 .. 999.999 [Units.km];
      /** Für die Lärmsanierung massgebender Emissionspegel
       */
      lrE_max_day : MANDATORY 0.0 .. 120.0 [Units.dB];
      /** Für die Lärmsanierung massgebender Emissionspegel
       */
      lrE_max_night : MANDATORY 0.0 .. 120.0 [Units.dB];
      lrE_remark : MTEXT*256;
      lrE_max_year : 1900 .. 2100;
      /** Datum der Verfügung. Für Angaben, wo das Datum nicht genau bekannt ist, einfach 1.1. und Jahr verwenden.
       */
      lrE_max_date : FORMAT INTERLIS.XMLDate "1900-01-01" .. "2100-01-01";
      lrE_max_remark : MTEXT*256;
    END railwayemission_legal;

    ASSOCIATION railwayemission2input_noise_sonrail =
      segment -- {1} railwayemission;
      input_noise_sonrail -- {0..10} input_noise_sonrail;
    END railwayemission2input_noise_sonrail;

    ASSOCIATION output_Erailway2input_train_sonrail =
      output_sonrail -<> {1} output_Erailway;
      input_sonrail -- {0..1} input_train_sonrail;
    END output_Erailway2input_train_sonrail;

    ASSOCIATION output_Erailway2input_trassee_sonrail =
      output_sonrail -<> {1} output_Erailway;
      input_trassee_sonrail -- {0..1} input_trassee_sonrail;
    END output_Erailway2input_trassee_sonrail;

    ASSOCIATION output_Erailway_semibel2input_train_semibel =
      output -<> {1} output_Erailway;
      input_train_semibel -- {0..1} input_train_semibel;
    END output_Erailway_semibel2input_train_semibel;

    ASSOCIATION output_Erailway_semibel2input_trassee_semibel =
      output -<> {1} output_Erailway;
      input_trassee_semibel -- {0..1} input_trassee_semibel;
    END output_Erailway_semibel2input_trassee_semibel;

    ASSOCIATION railwayemission2output_Erailway =
      segment -<> {1} railwayemission;
      calc_result -- {0..*} output_Erailway;
    END railwayemission2output_Erailway;

    ASSOCIATION railwayemission2railwayemission_legal =
      railwayemission -- {0..*} railwayemission;
      railwayemission_legal -- {0..*} railwayemission_legal;
    END railwayemission2railwayemission_legal;

  END emission_railway;

  TOPIC immission_railway =
    DEPENDS ON NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists;

    CLASS dispersion_calculation =
      dispcal_remark : MTEXT*256;
      dispersionmodel : MANDATORY TEXT*30;
      dispersionapplication : MANDATORY TEXT*30;
      heightmodel : TEXT*40;
      building_database : TEXT*40;
      noisebarrier_geodata : TEXT*40;
      emissiondata : TEXT*40;
      refyear_register : MANDATORY 1900 .. 2100;
      NPR_name : MANDATORY TEXT*50;
      I_measurement : BOOLEAN;
    END dispersion_calculation;

    /** Verfügte maximal zulässige Immissionspegel
     */
    CLASS pointofdetermination_legal =
      /** Allgemeine Bemerkungen zur Klasse. Zum Beispiel, auf welches Gebäude-Geschoss sich der Ermittlungspunkt bezieht.
       */
      determination_l_remark : MTEXT*256;
      geometry_pod : MANDATORY GeometryCHLV95_V1.Coord3;
      /** Beurteilung des Ermittlungspunkts, ob es sich dabei beim Objekt um einen Betriebsraum handelt oder nicht.
       */
      operation_status : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.operation_status_CatRef;
      /** Adressen ID aus eidgenössischem Gebäude- und Wohnungsregister GWR.
       */
      EGID : 0 .. 9999999999;
      /** Adressen ID aus eidgenössischem Gebäude- und Wohnungsregister GWR.
       */
      EDID : 0 .. 9999999999;
      /** Wertebereich: Fassadenpunkt (am Gebäude), Freifeld oder an der Baulinie.
       */
      pointofdetermination_t : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.pointofdetermination_CatRef;
      /** Nur wenn kein EGID oder EDID vorhanden ist und sich der Ermittlungspunkt an einem Gebäude befindet.
       */
      address_pod : MTEXT*100;
      /** In welchem Jahr  wurden die maximal zulässigen Immissionspegel verfügt?
       */
      lr_max_year : 1900 .. 2100;
      /** Max. zulässiger Immissionspegel (Tag)
       */
      lr_max_day : 0.0 .. 120.0 [Units.dB];
      /** Max. zulässiger Immissionspegel (Nacht)
       */
      lr_max_night : 0.0 .. 120.0 [Units.dB];
      receptor : TEXT*50;
      es : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.es_CatRef;
      floor : TEXT*10;
      MANDATORY CONSTRAINT
        DEFINED (lr_max_day) OR DEFINED (lr_max_night);
    END pointofdetermination_legal;

    CLASS noisebarrier =
      geometry_nb : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_LV95_V1_1.PolylineZ;
      /** Abstand vom Gleis
       */
      trackdistance_nb : 0.00 .. 99.99 [INTERLIS.m];
      /** Länge der Lärmschutzwand
       */
      length_nb : 0.00 .. 1000.00 [INTERLIS.m];
      noisebarrierheight : 0.00 .. 99.99;
      /** Wandhöhe ab Schienenoberkante
       */
      height_above_track : 0.00 .. 99.99 [INTERLIS.m];
      noisebarriertype : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.noisebarriertype_CatRef;
      reflexionloss_left : 0.0 .. 99.9;
      reflexionloss_right : 0.0 .. 99.9;
      surface_type : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.noisebarriertype_sonrail_CatRef;
      noisebarrier_remark : MTEXT*256;
      /** Jahr der Verfügung
       */
      year_legal : 1900 .. 2100;
      /** Baujahr
       */
      year_construction : 1900 .. 2100;
      /** Material
       */
      material : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.noisebarrier_material_CatRef;
      /** True, falls Teile der Wand aus Glas sind.
       */
      has_glass : BOOLEAN;
      /** True, falls beidseitig absorbierend.
       */
      absorbtion_two_sided : BOOLEAN;
    END noisebarrier;

    CLASS affected_analysis =
      BFSNr : MANDATORY 0 .. 9999;
      GemN : MANDATORY TEXT*50;
      affected_analysis_remark : MTEXT*256;
      PV_day : MANDATORY 0.0 .. 99999999.9;
      PV_night : MANDATORY 0.0 .. 99999999.9;
      ALV_day : MANDATORY 0.0 .. 99999999.9;
      ALV_night : MANDATORY 0.0 .. 99999999.9;
      AV_day : MANDATORY 0.0 .. 99999999.9;
      AV_night : MANDATORY 0.0 .. 99999999.9;
      sum_people : 0.0 .. 99999999.9;
      withoutsensitivitylevel : 0.0 .. 99999999.9;
      analysis_year : 1900 .. 2100;
      gemarea : MANDATORY Polygon;
     END affected_analysis;

    CLASS pointofdetermination =
      determination_remark : MTEXT*256;
      /** Punkt, inkl. Immissionskorrektur aus dem Berechnungsmodell. Entweder Tag (N2) oder Nacht (N3) sollte zwingend erfasst werden.
       */
      Lr_day : 0.0 .. 120.0;
      /** Punkt, inkl. Immissionskorrektur aus dem Berechnungsmodell. Entweder Tag (N2) oder Nacht (N3) sollte zwingend erfasst werden.
       */
      Lr_night : 0.0 .. 120.0;
      geometry_pod : MANDATORY GeometryCHLV95_V1.Coord3;
      operation_status : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.operation_status_CatRef;
      EGID : 0 .. 9999999999;
      EDID : 0 .. 9999999999;
      pointofdetermination_t : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.pointofdetermination_CatRef;
      address_pod : MTEXT*100;
      exposure_limit_value_d : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.exposure_limit_value_CatRef;
      exposure_limit_value_n : MANDATORY NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.exposure_limit_value_CatRef;
      exposure_limit_date : FORMAT INTERLIS.XMLDate "1900-01-01" .. "2100-12-31";
      /** Störkorrekturwert gemäss LSV Anhang 4, Kap. s3
       */
      k2 : 0 .. 8 [Units.dB];
      receptor : TEXT*50;
      es : NoisePollutionRegisterForRailwayInfrastructure_Codelisten_V1_1.codelists.es_CatRef;
      floor : TEXT*10;
    END pointofdetermination;

    ASSOCIATION dispersion_calculation2pointofdetermination =
      dispersion_calculation -- {1} dispersion_calculation;
      pointofdetermination -- {1..*} pointofdetermination;
    END dispersion_calculation2pointofdetermination;

    ASSOCIATION pointofdetermination2pointofdetermination_legal =
      pointofdetermination -- {0..*} pointofdetermination;
      pointofdetermination_legal -- {0..1} pointofdetermination_legal;
    END pointofdetermination2pointofdetermination_legal;

  END immission_railway;

END NoisePollutionRegisterForRailwayInfrastructure_LV95_V1_1.
